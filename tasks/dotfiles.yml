---
- name: Get fact dotfiles path
  become: true
  become_method: "{{ users.become_method }}"
  become_user: "{{ users.main }}"
  stat:
    path: "{{ dotfiles.root }}"
  register: dots_path
  changed_when: false


  # TODO give this xdg pathing when the proper roles for it exists
- name: Get facts about XDG_DATA_DIR
  become: true
  become_method: "{{ users.become_method }}"
  become_user: "{{ users.main }}"
  file:
    path: "~/.local/share"
    state: directory
    mode: 0755


  # TODO give this xdg pathing when the proper roles for it exists
- name: Check if XDG_CONFIG_DIR if not present
  become: true
  become_method: "{{ users.become_method }}"
  become_user: "{{ users.main }}"
  file:
    path: ~/.config
    state: directory
    mode: 0755


- name: Clone dotfiles repo
  become: true
  become_method: "{{ users.become_method }}"
  become_user: "{{ users.main }}"
  git:
    repo: "{{ dotfiles.remote.github.url.https }}"
    dest: "{{ dotfiles.root }}"
    update: true
    version: master
  # when: (not dots_path.stat.exists)


- name: Get fact for dotfiles remote
  become: true
  become_method: "{{ users.become_method }}"
  become_user: "{{ users.main }}"
  shell: echo $(git remote -v)
  args: { chdir: "{{ dotfiles.root }}" }
  register: dot_remote
  ignore_errors: true
  changed_when: false


- name: Set dotfiles remote to use github ssh uri
  become: true
  become_method: "{{ users.become_method }}"
  become_user: "{{ users.main }}"
  shell: >
    git remote set-url origin
    "{{ dotfiles.remote.github.url.ssh }}"
  args:
    chdir: "{{ dotfiles.root }}"
  when: dotfiles.remote.github.url.ssh not in dot_remote.stdout
