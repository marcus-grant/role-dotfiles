---
- name: Get facts about GOPATH
  stat:
    path: "{{ go_path_primary }}"
  register: gopath_primary_tmp_var
  changed_when: false

# TODO also check for populated gopath contents before DL

- name: Get facts about current go version
  command: "{{ go_path_primary }}/bin/go version"
  ignore_errors: yes
  register: gover
  changed_when: false

- name: Download go tarball
  get_url:
    url: "{{ go_download_url }}"
    dest: "{{ xdg_data_dir }}/{{ go_tarball }}"
    checksum: "{{ go_tarball_sha256 }}"
  when: (gover.failed) or
        (gover.stdout != go_version_target)

- name: Delete old go binaries
  file:
    path: "{{ go_path_primary }}"
    state: absent
  when: (gover.failed) or
        (gover.stdout != go_version_target)


- name: Extract go tarball if go isn't yet installed or desired version
  unarchive:
    src: "{{ xdg_data_dir }}/{{ go_tarball }}"
    dest: "{{ xdg_data_dir }}"
    copy: no
  when: (gover.failed == true) or
        (gover.stdout != go_version_target)


- name: Delete go tarball download if present
  file:
    path: "~/{{ go_tarball }}"
    state: absent
